<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>60</value>
  </metadata>
</root>